{"version":3,"sources":["components/BgItem.js"],"names":["BgItem","props","state","error","loaded","chooseBackground","bind","loadHandler","this","setState","axios","method","baseURL","process","url","data","background_image","embedUrl","then","history","push","catch","err","response","message","className","sandbox","style","display","onLoad","src","allowFullScreen","onClick","Component"],"mappings":"qOAKqBA,G,kBAEnB,WAAYC,GAAO,IAAD,8BAChB,4CAAMA,KAEDC,MAAQ,CACXC,MAAO,KACPC,QAAQ,GAEV,EAAKC,iBAAmB,EAAKA,iBAAiBC,KAAtB,gBACxB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBARH,E,2EAYhBE,KAAKC,SAAS,CAACL,QAAO,M,yCAGJ,IAAD,OAEjB,OAAOM,YAAM,CACXC,OAAQ,OACRC,QAASC,gDACZC,IAAK,qBACFC,KAAM,CAACC,iBAAkBR,KAAKP,MAAMgB,YAGnCC,KAAK,WACJ,EAAKT,SAAS,CAACN,MAAO,KACtB,EAAKF,MAAMkB,QAAQC,KAAK,aAEzBC,MAAM,SAACC,GACN,EAAKb,SAAS,CAACN,MAAOmB,EAAIC,SAASR,KAAKS,UACN,cAA9BF,EAAIC,SAASR,KAAKS,SACpB,EAAKvB,MAAMkB,QAAQC,KAAK,c,+BAM9B,OACE,yBAAKK,UAAU,UACb,4BAAQC,QAAQ,gBAAgBC,MAAO,CAACC,QAASpB,KAAKN,MAAME,OAAS,QAAS,QAASyB,OAAQrB,KAAKD,YAAauB,IAAKtB,KAAKP,MAAMgB,SAAUc,iBAAe,IAC1J,4BAAQN,UAAU,WAAWO,QAASxB,KAAKH,kBAA3C,e,GA1C4B4B,e","file":"static/js/3.73ae1dfb.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport \"../stylesheets/BgItem.css\";\nimport axios from \"../utils/axios\";\nimport LazyLoad from 'react-lazy-load';\n\nexport default class BgItem extends Component {\n\n  constructor(props){\n    super(props);\n\n    this.state = {\n      error: null,\n      loaded: false\n    }\n    this.chooseBackground = this.chooseBackground.bind(this);\n    this.loadHandler = this.loadHandler.bind(this)\n  }\n\n  loadHandler() {\n    this.setState({loaded:true})\n  }\n\n  chooseBackground() {\n    // STEP 1 : SEND CHOSEN BACKGROUND TO THE BACKEND\n    return axios({\n      method: \"POST\",\n      baseURL: process.env.REACT_APP_API,\n\t\t\turl: \"/exhibition/create\",\n      data: {background_image: this.props.embedUrl}\n    })\n    // STEP 3 : WITH ACT ACCORDINGLY TO WHAT THE BACKEND SENT US\n      .then(()=> {\n        this.setState({error: \"\"});\n        this.props.history.push(\"/images\"); // to redirect\n      })\n      .catch((err)=> {\n        this.setState({error: err.response.data.message});\n        if (err.response.data.message === \"Forbidden\") {\n          this.props.history.push(\"/login\"); // to redirect\n        }\n      })\n  }\n\n  render() {\n    return (\n      <div className=\"BgItem\">\n        <iframe sandbox=\"allow-scripts\" style={{display: this.state.loaded ? \"block\": \"none\"}} onLoad={this.loadHandler} src={this.props.embedUrl} allowFullScreen/>\n        <button className=\"BgButton\" onClick={this.chooseBackground}>select</button>\n      </div>\n    )\n  }\n\n}"],"sourceRoot":""}