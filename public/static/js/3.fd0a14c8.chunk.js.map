{"version":3,"sources":["components/BgItem.js"],"names":["BgItem","props","state","error","loaded","chooseBackground","bind","loadHandler","this","setState","axios","method","baseURL","process","url","data","background_image","embedUrl","then","history","push","catch","err","response","message","className","height","scrolling","style","display","onLoad","src","frameborder","allowvr","allow","allowfullscreen","mozallowfullscreen","webkitallowfullscreen","onmousewheel","onClick","Component"],"mappings":"4QAKqBA,E,YAEnB,WAAYC,GAAO,IAAD,8BAChB,4CAAMA,KAEDC,MAAQ,CACXC,MAAO,KACPC,QAAQ,GAEV,EAAKC,iBAAmB,EAAKA,iBAAiBC,KAAtB,gBACxB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBARH,E,2EAYhBE,KAAKC,SAAS,CAACL,QAAO,M,yCAGJ,IAAD,OAEjB,OAAOM,YAAM,CACXC,OAAQ,OACRC,QAASC,gDACZC,IAAK,qBACFC,KAAM,CAACC,iBAAkBR,KAAKP,MAAMgB,YAGnCC,KAAK,WACJ,EAAKT,SAAS,CAACN,MAAO,KACtB,EAAKF,MAAMkB,QAAQC,KAAK,aAEzBC,MAAM,SAACC,GACN,EAAKb,SAAS,CAACN,MAAOmB,EAAIC,SAASR,KAAKS,UACN,cAA9BF,EAAIC,SAASR,KAAKS,SACpB,EAAKvB,MAAMkB,QAAQC,KAAK,c,+BAM9B,OACE,yBAAKK,UAAU,UACb,kBAAC,IAAD,KACE,4BACEC,OAAO,QACPC,UAAU,KACVC,MAAO,CAACC,QAASrB,KAAKN,MAAME,OAAS,QAAS,QAC9C0B,OAAQtB,KAAKD,YACbwB,IAAKvB,KAAKP,MAAMgB,SAChBe,YAAY,IACZC,QAAQ,MACRC,MAAM,4DACNC,iBAAe,EAACC,mBAAmB,OACnCC,sBAAsB,OACtBC,aAAa,MAGjB,4BAAQb,UAAU,SAASc,QAAS/B,KAAKH,kBAAzC,e,GAxD4BmC","file":"static/js/3.fd0a14c8.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport \"../stylesheets/BgItem.css\";\nimport axios from \"../utils/axios\";\nimport LazyLoad from 'react-lazy-load';\n\nexport default class BgItem extends Component {\n\n  constructor(props){\n    super(props);\n\n    this.state = {\n      error: null,\n      loaded: false\n    }\n    this.chooseBackground = this.chooseBackground.bind(this);\n    this.loadHandler = this.loadHandler.bind(this)\n  }\n\n  loadHandler() {\n    this.setState({loaded:true})\n  }\n\n  chooseBackground() {\n    // STEP 1 : SEND CHOSEN BACKGROUND TO THE BACKEND\n    return axios({\n      method: \"POST\",\n      baseURL: process.env.REACT_APP_API,\n\t\t\turl: \"/exhibition/create\",\n      data: {background_image: this.props.embedUrl}\n    })\n    // STEP 3 : WITH ACT ACCORDINGLY TO WHAT THE BACKEND SENT US\n      .then(()=> {\n        this.setState({error: \"\"});\n        this.props.history.push(\"/images\"); // to redirect\n      })\n      .catch((err)=> {\n        this.setState({error: err.response.data.message});\n        if (err.response.data.message === \"Forbidden\") {\n          this.props.history.push(\"/login\"); // to redirect\n        }\n      })\n  }\n\n  render() {\n    return (\n      <div className=\"BgItem\">\n        <LazyLoad>\n          <iframe \n            height=\"250px\" \n            scrolling=\"no\" \n            style={{display: this.state.loaded ? \"block\": \"none\"}} \n            onLoad={this.loadHandler}\n            src={this.props.embedUrl} \n            frameborder=\"0\" \n            allowvr=\"yes\" \n            allow=\"vr; xr; accelerometer; magnetometer; gyroscope; autoplay;\" \n            allowfullscreen mozallowfullscreen=\"true\" \n            webkitallowfullscreen=\"true\" \n            onmousewheel=\"\">\n          </iframe>        \n        </LazyLoad> \n        <button className=\"bg-btn\" onClick={this.chooseBackground}>select</button>\n      </div>\n    )\n  }\n\n}"],"sourceRoot":""}